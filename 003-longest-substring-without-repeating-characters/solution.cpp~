/*
 * Filename:      solution.cpp
 * Copyright:     2014, Zhicong Chen
 * Version:       
 * Author:        Zhicong Chen <zhicong.chen@changecong.com>
 * Created at:    Tue Jan  7 12:22:19 2014
 * Modified at:   Tue Jan  7 13:05:08 2014
 * Modified by:   Zhicong Chen <zhicong.chen@changecong.com>
 * Status:        Experimental, do not distribute.
 * Description:   Longest substring without repeating characters.   
 *
 */

#include <iostream>
#include <string>

using namespace std;

class Solution {
public:
    int lengthOfLongestSubstring(string s) {

#ifdef LOGIC

        int c = 0;
        string::iterator it;
        it = s.begin();
        char a = (char)(*it);
        it++;
        c++;
        for ( ; it != s.end(); it++) {
            
        }


#endif  // LOGIC
        
    }
};


int main() {

    char a = 'a';
    char b = 'b';

    std::cout << "a : " << a << " b : " << b << std::endl;
    std::cout << "a | b : " << (char)(a | b) << std::endl;
    std::cout << "a & b : " << (char)(a & b) << std::endl;
    std::cout << "a | a : " << (char)(a | a) << std::endl;
    std::cout << "a & a : " << (char)(a & a) << std::endl;
    std::cout << "a | b | a : " << (char)(b | a | 'd' | b) << std::endl;
    std::cout << "a & b & a : " << (char)(a & b & a) << std::endl;

    return 0;
}
